{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(mkdir:*)",
      "Bash(npm install)",
      "Bash(mv:*)",
      "Bash(npm run dev:*)",
      "Bash(npm test)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(pkill:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(gh repo view:*)",
      "Bash(gh api:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(npm --version)",
      "Bash(npm audit:*)",
      "Bash(npm run build:*)",
      "Bash(gh repo edit:*)",
      "Bash(git rm:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(git commit:*)",
      "Bash(gh issue close:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh issue create:*)",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(npm run lint)",
      "Bash(git reset:*)",
      "Bash(gh issue list:*)",
      "Bash(npx tsc:*)",
      "Bash(ls:*)",
      "Bash(npm test:*)",
      "Bash(npm run preview:*)",
      "Bash(npm uninstall:*)",
      "Bash(npx:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run format:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(timeout 30s npm run test:coverage)",
      "Bash(timeout 10s npm run test:coverage)",
      "Bash(timeout:*)",
      "Bash(grep:*)",
      "Bash(gh issue view:*)",
      "Bash(npm run typecheck:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:fabric5.fabricjs.com)",
      "WebFetch(domain:davelage.com)",
      "WebFetch(domain:www.the-koi.com)",
      "Bash(git clone:*)",
      "Bash(npm run test:*)",
      "Bash(npm run:*)",
      "Bash(curl:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(gh:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git rebase:*)",
      "Bash(cat:*)",
      "Bash(git branch:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "WebFetch(domain:www.contributor-covenant.org)",
      "Bash(npm start)",
      "Bash(git cherry-pick:*)",
      "Bash(git remote:*)",
      "mcp__ccusage__session",
      "mcp__language-server__diagnostics",
      "mcp__language-server__definition",
      "mcp__language-server__hover",
      "mcp__language-server__references",
      "Bash(npm ls:*)",
      "Bash(tsc --noEmit)",
      "Bash(serena:*)",
      "Bash(env)",
      "mcp__serena__initial_instructions",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__onboarding",
      "mcp__serena__list_dir",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__write_memory",
      "mcp__serena__find_symbol",
      "mcp__serena__find_referencing_symbols",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__read_memory",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__replace_regex",
      "mcp__serena__replace_symbol_body",
      "Bash(git restore:*)",
      "mcp__serena__search_for_pattern",
      "Bash(sed:*)",
      "Bash(cp:*)",
      "mcp__serena__list_memories",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__summarize_changes",
      "mcp__serena__insert_before_symbol",
      "mcp__serena__get_current_config",
      "mcp__playwright__browser_install",
      "mcp__serena__find_file",
      "mcp__playwright__browser_navigate",
      "Bash(git stash:*)",
      "Bash(chmod:*)",
      "mcp__serena__read_file",
      "mcp__serena__create_text_file",
      "mcp__serena__execute_shell_command",
      "Bash(python:*)",
      "Bash(git revert:*)",
      "Bash(npm view:*)",
      "Bash(npm init:*)",
      "Bash(git config:*)",
      "mcp__serena__replace_lines",
      "Bash(gemini:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright"
  ],
  "disabledMcpjsonServers": [
    "language-server"
  ]
}