(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const h of a.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&e(h)}).observe(document,{childList:!0,subtree:!0});function s(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function e(i){if(i.ep)return;i.ep=!0;const a=s(i);fetch(i.href,a)}})();class l{constructor(){this.canvas=document.getElementById("gameCanvas"),this.ctx=this.canvas.getContext("2d"),this.gameStatus=document.getElementById("gameStatus"),this.timerDisplay=document.getElementById("timer"),this.scoreDisplay=document.getElementById("score"),this.gameRunning=!1,this.gameOver=!1,this.currentStage=1,this.debugMode=!1,this.player={x:100,y:400,vx:0,vy:0,radius:3,grounded:!1},this.hasMovedOnce=!1,this.timeLimit=20,this.timeRemaining=this.timeLimit,this.gameStartTime=null,this.finalScore=0,this.clearAnimation={active:!1,startTime:null,duration:3e3,particles:[]},this.deathAnimation={active:!1,startTime:null,duration:2e3,particles:[]},this.deathMarks=[],this.trail=[],this.maxTrailLength=8,this.gravity=.6,this.jumpForce=-12,this.autoJumpInterval=300,this.lastJumpTime=null,this.moveSpeed=4,this.friction=.95,this.camera={x:0,y:0},this.stage=this.createStage(this.currentStage),this.keys={},this.setupInput(),this.lastTime=null,this.animationId=null,this.init()}init(){this.gameStatus.textContent="Press SPACE to start",this.gameRunning=!1,this.gameOver=!1,this.player.x=100,this.player.y=400,this.player.vx=0,this.player.vy=0,this.player.grounded=!1,this.hasMovedOnce=!1,this.timeRemaining=this.timeLimit,this.gameStartTime=null,this.finalScore=0,this.clearAnimation.active=!1,this.clearAnimation.startTime=null,this.clearAnimation.particles=[],this.deathAnimation.active=!1,this.deathAnimation.startTime=null,this.deathAnimation.particles=[],this.timerDisplay.textContent=`Time: ${this.timeLimit}`,this.scoreDisplay.textContent="Score: 0",this.camera.x=0,this.camera.y=0,this.trail=[],this.gravity=.6,this.jumpForce=-12,this.autoJumpInterval=300,this.moveSpeed=4,this.friction=.95,this.lastJumpTime=null,this.lastTime=null,this.keys={},this.animationId&&cancelAnimationFrame(this.animationId),this.animationId=requestAnimationFrame(t=>this.gameLoop(t))}createStage(t){switch(t){case 1:return this.createStage1();case 2:return this.createStage2();default:return this.createStage1()}}createStage1(){return{platforms:[{x1:-500,y1:500,x2:350,y2:500},{x1:450,y1:500,x2:750,y2:500},{x1:850,y1:500,x2:1150,y2:500},{x1:1250,y1:480,x2:1550,y2:480},{x1:1650,y1:460,x2:1950,y2:460},{x1:2050,y1:440,x2:2350,y2:440},{x1:375,y1:420,x2:425,y2:420},{x1:775,y1:400,x2:825,y2:400},{x1:1175,y1:400,x2:1225,y2:400},{x1:1575,y1:380,x2:1625,y2:380},{x1:1975,y1:360,x2:2025,y2:360}],movingPlatforms:[],holes:[{x1:350,x2:450},{x1:750,x2:850},{x1:1150,x2:1250},{x1:1550,x2:1650},{x1:1950,x2:2050}],spikes:[{x:500,y:480,width:15,height:15},{x:900,y:480,width:15,height:15},{x:1700,y:440,width:15,height:15}],movingSpikes:[],goal:{x:2400,y:390,width:40,height:50},startText:{x:50,y:450,text:"STAGE 1"},goalText:{x:2420,y:370,text:"GOAL"},leftEdgeMessage:{x:-400,y:450,text:"NOTHING HERE"},leftEdgeSubMessage:{x:-400,y:470,text:"GO RIGHT →"}}}createStage2(){return{platforms:[{x1:-500,y1:500,x2:300,y2:500},{x1:500,y1:500,x2:700,y2:500},{x1:900,y1:500,x2:1100,y2:500},{x1:1300,y1:480,x2:1500,y2:480},{x1:1700,y1:460,x2:1900,y2:460},{x1:2100,y1:440,x2:2350,y2:440},{x1:1150,y1:400,x2:1250,y2:400},{x1:1950,y1:360,x2:2050,y2:360}],movingPlatforms:[{x1:350,y1:420,x2:450,y2:420,startX:350,endX:450,currentX:350,speed:1.5,direction:1},{x1:750,y1:400,x2:850,y2:400,startX:750,endX:850,currentX:750,speed:2,direction:1},{x1:1550,y1:380,x2:1650,y2:380,startX:1550,endX:1650,currentX:1550,speed:1,direction:1}],holes:[{x1:300,x2:500},{x1:700,x2:900},{x1:1100,x2:1300},{x1:1500,x2:1700},{x1:1900,x2:2100}],spikes:[{x:550,y:480,width:15,height:15},{x:800,y:480,width:15,height:15},{x:1200,y:380,width:15,height:15},{x:1750,y:440,width:15,height:15}],movingSpikes:[],goal:{x:2400,y:390,width:40,height:50},startText:{x:50,y:450,text:"STAGE 2"},goalText:{x:2420,y:370,text:"GOAL"},leftEdgeMessage:{x:-400,y:450,text:"NOTHING HERE"},leftEdgeSubMessage:{x:-400,y:470,text:"GO RIGHT →"}}}setupInput(){document.addEventListener("keydown",t=>{this.gameOver||(this.keys[t.code]=!0),t.code==="Space"&&!this.gameRunning&&!this.gameOver&&(this.startGame(),t.preventDefault()),t.code==="KeyR"&&this.gameOver&&!this.keys.KeyR&&(this.init(),t.preventDefault()),["ArrowLeft","ArrowRight","ArrowUp","ArrowDown"].includes(t.code)&&t.preventDefault()}),document.addEventListener("keyup",t=>{this.gameOver||(this.keys[t.code]=!1)})}startGame(){this.gameRunning=!0,this.gameStatus.textContent="Playing",this.lastJumpTime=performance.now(),this.gameStartTime=performance.now()}update(t){if(!this.gameRunning||this.gameOver)return;if(this.gameStartTime){const n=(performance.now()-this.gameStartTime)/1e3;if(this.timeRemaining=Math.max(0,this.timeLimit-n),this.timeRemaining<=0){this.handlePlayerDeath("Time Up! Press R to restart");return}this.timerDisplay.textContent=`Time: ${Math.ceil(this.timeRemaining)}`}let s=this.keys.ArrowLeft,e=this.keys.ArrowRight;s?(this.player.vx-=.5,this.hasMovedOnce=!0):e&&(this.player.vx+=.5,this.hasMovedOnce=!0),this.hasMovedOnce&&Math.abs(this.player.vx)<.2&&(this.player.vx=this.player.vx>=0?.2:-.2);const i=this.moveSpeed;this.player.vx>i&&(this.player.vx=i),this.player.vx<-i&&(this.player.vx=-i);const a=performance.now();this.lastJumpTime===null&&(this.lastJumpTime=a-this.autoJumpInterval),this.player.grounded&&a-this.lastJumpTime>this.autoJumpInterval&&(this.player.vy=this.jumpForce,this.player.grounded=!1,this.lastJumpTime=a),this.player.grounded||(this.player.vy+=this.gravity),this.player.x+=this.player.vx,this.player.y+=this.player.vy,this.trail.push({x:this.player.x,y:this.player.y}),this.trail.length>this.maxTrailLength&&this.trail.shift(),this.handlePlatformCollisions(),this.checkSpikeCollisions(),this.checkHoleCollisions(),this.checkGoalCollision(),this.camera.x=this.player.x-this.canvas.width/2,this.player.y>this.canvas.height+100&&this.handlePlayerDeath("Game Over - Press R to restart","fall")}handlePlatformCollisions(){this.player.grounded=!1;for(const t of this.stage.platforms)if(this.checkPlatformCollision(t))break}checkPlatformCollision(t){return this.player.x+this.player.radius>t.x1&&this.player.x-this.player.radius<t.x2&&this.player.y+this.player.radius>=t.y1-5&&this.player.y+this.player.radius<=t.y1+10&&this.player.vy>=0?(this.player.y=t.y1-this.player.radius,this.player.vy=0,this.player.grounded=!0,this.lastJumpTime=performance.now()-this.autoJumpInterval,!0):!1}checkSpikeCollisions(){for(const t of this.stage.spikes)if(this.player.x+this.player.radius>t.x&&this.player.x-this.player.radius<t.x+t.width&&this.player.y+this.player.radius>t.y&&this.player.y-this.player.radius<t.y+t.height){this.handlePlayerDeath("Hit by spike! Press R to restart");return}}checkHoleCollisions(){this.player.y>600&&this.handlePlayerDeath("Fell into hole! Press R to restart","fall")}checkGoalCollision(){const t=this.stage.goal;this.player.x+this.player.radius>t.x&&this.player.x-this.player.radius<t.x+t.width&&this.player.y+this.player.radius>t.y&&this.player.y-this.player.radius<t.y+t.height&&(this.gameOver=!0,this.finalScore=Math.ceil(this.timeRemaining),this.gameStatus.textContent=`Goal reached! Score: ${this.finalScore} - Press R to restart`,this.scoreDisplay.textContent=`Score: ${this.finalScore}`,this.startClearAnimation())}startClearAnimation(){this.clearAnimation.active=!0,this.clearAnimation.startTime=performance.now(),this.clearAnimation.particles=[];for(let t=0;t<20;t++)this.clearAnimation.particles.push({x:this.player.x+(Math.random()-.5)*100,y:this.player.y+(Math.random()-.5)*100,vx:(Math.random()-.5)*8,vy:(Math.random()-.5)*8-2,life:1,decay:.02+Math.random()*.02})}updateClearAnimation(){if(!this.clearAnimation.active)return;const s=performance.now()-this.clearAnimation.startTime;for(let e=this.clearAnimation.particles.length-1;e>=0;e--){const i=this.clearAnimation.particles[e];i.x+=i.vx,i.y+=i.vy,i.vy+=.1,i.life-=i.decay,i.life<=0&&this.clearAnimation.particles.splice(e,1)}s>this.clearAnimation.duration&&(this.clearAnimation.active=!1)}renderClearAnimation(){if(!this.clearAnimation.active)return;const s=performance.now()-this.clearAnimation.startTime,e=s/this.clearAnimation.duration;for(const i of this.clearAnimation.particles)this.ctx.fillStyle=`rgba(255, 255, 255, ${i.life})`,this.ctx.beginPath(),this.ctx.arc(i.x,i.y,2,0,Math.PI*2),this.ctx.fill();if(e<.8){const i=Math.sin(s*.01)*.3+1,a=Math.max(0,1-e/.8);this.ctx.fillStyle=`rgba(255, 255, 255, ${a})`,this.ctx.font=`${Math.floor(32*i)}px monospace`,this.ctx.textAlign="center",this.ctx.fillText("CLEAR!",this.player.x,this.player.y-50)}}handlePlayerDeath(t,s="normal"){this.gameOver=!0,this.gameStatus.textContent=t;let e=this.player.x,i=this.player.y;s==="fall"&&(i=this.camera.y+this.canvas.height-20),this.deathMarks.push({x:e,y:i,timestamp:performance.now()}),this.startDeathAnimation(),this.trail=[]}startDeathAnimation(){this.deathAnimation.active=!0,this.deathAnimation.startTime=performance.now(),this.deathAnimation.particles=[];for(let t=0;t<15;t++){const s=Math.PI*2*t/15,e=3+Math.random()*4;this.deathAnimation.particles.push({x:this.player.x,y:this.player.y,vx:Math.cos(s)*e,vy:Math.sin(s)*e-1,life:1,decay:.01+Math.random()*.02,size:2+Math.random()*2})}}updateDeathAnimation(){if(!this.deathAnimation.active)return;const s=performance.now()-this.deathAnimation.startTime;for(let e=this.deathAnimation.particles.length-1;e>=0;e--){const i=this.deathAnimation.particles[e];i.x+=i.vx,i.y+=i.vy,i.vy+=.1,i.life-=i.decay,i.life<=0&&this.deathAnimation.particles.splice(e,1)}s>this.deathAnimation.duration&&(this.deathAnimation.active=!1)}renderDeathAnimation(){if(this.deathAnimation.active)for(const t of this.deathAnimation.particles)this.ctx.fillStyle=`rgba(255, 0, 0, ${t.life})`,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.size,0,Math.PI*2),this.ctx.fill()}renderDeathMarks(){this.ctx.strokeStyle="rgba(255, 0, 0, 0.8)",this.ctx.lineWidth=3;for(const t of this.deathMarks)this.ctx.beginPath(),this.ctx.moveTo(t.x-8,t.y-8),this.ctx.lineTo(t.x+8,t.y+8),this.ctx.moveTo(t.x+8,t.y-8),this.ctx.lineTo(t.x-8,t.y+8),this.ctx.stroke();this.ctx.lineWidth=2}render(){this.ctx.fillStyle="black",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.strokeStyle="white",this.ctx.fillStyle="white",this.ctx.lineWidth=2,this.ctx.save(),this.ctx.translate(-this.camera.x,-this.camera.y),this.drawStage(),this.drawGoalAndTexts(),this.renderDeathMarks(),this.gameRunning&&!this.gameOver&&(this.drawTrail(),this.ctx.fillStyle="white",this.ctx.beginPath(),this.ctx.arc(this.player.x,this.player.y,this.player.radius,0,Math.PI*2),this.ctx.fill()),this.renderDeathAnimation(),this.renderClearAnimation(),this.ctx.restore(),!this.gameRunning&&!this.gameOver&&(this.ctx.fillStyle="white",this.ctx.font="24px monospace",this.ctx.textAlign="center",this.ctx.fillText("Press SPACE to Start",this.canvas.width/2,this.canvas.height/2)),this.gameOver&&(this.ctx.fillStyle="white",this.ctx.font="24px monospace",this.ctx.textAlign="center",this.ctx.fillText("Game Over - Press R to restart",this.canvas.width/2,this.canvas.height/2)),this.ctx.fillStyle="rgba(255, 255, 255, 0.6)",this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText("Made by traponion",this.canvas.width/2,this.canvas.height-30),this.ctx.fillText("github.com/traponion/jumping-dot-game",this.canvas.width/2,this.canvas.height-15)}gameLoop(t){if(this.lastTime===null){this.lastTime=t,requestAnimationFrame(i=>this.gameLoop(i));return}const s=t-this.lastTime;this.lastTime=t;const e=Math.min(s,16.67);this.update(e),this.updateClearAnimation(),this.updateDeathAnimation(),this.render(),this.animationId=requestAnimationFrame(i=>this.gameLoop(i))}drawStage(){this.ctx.strokeStyle="white",this.ctx.lineWidth=2;for(const t of this.stage.platforms)this.ctx.beginPath(),this.ctx.moveTo(t.x1,t.y1),this.ctx.lineTo(t.x2,t.y2),this.ctx.stroke();this.ctx.fillStyle="white";for(const t of this.stage.spikes)this.drawSpike(t)}drawSpike(t){this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y+t.height),this.ctx.lineTo(t.x+t.width/2,t.y),this.ctx.lineTo(t.x+t.width,t.y+t.height),this.ctx.closePath(),this.ctx.fill(),this.ctx.strokeStyle="white",this.ctx.lineWidth=1,this.ctx.stroke()}drawGoalAndTexts(){const t=this.stage.goal;this.ctx.strokeStyle="white",this.ctx.lineWidth=2,this.ctx.strokeRect(t.x,t.y,t.width,t.height),this.ctx.beginPath(),this.ctx.moveTo(t.x,t.y),this.ctx.lineTo(t.x+t.width,t.y+t.height),this.ctx.moveTo(t.x+t.width,t.y),this.ctx.lineTo(t.x,t.y+t.height),this.ctx.stroke();const s=this.stage.startText;this.ctx.fillStyle="white",this.ctx.font="16px monospace",this.ctx.textAlign="center",this.ctx.fillText(s.text,s.x,s.y);const e=this.stage.goalText;this.ctx.fillStyle="white",this.ctx.font="16px monospace",this.ctx.textAlign="center",this.ctx.fillText(e.text,e.x,e.y);const i=this.stage.leftEdgeMessage;this.ctx.fillStyle="white",this.ctx.font="14px monospace",this.ctx.textAlign="center",this.ctx.fillText(i.text,i.x,i.y);const a=this.stage.leftEdgeSubMessage;this.ctx.fillStyle="white",this.ctx.font="12px monospace",this.ctx.textAlign="center",this.ctx.fillText(a.text,a.x,a.y)}drawTrail(){for(let t=0;t<this.trail.length;t++){const s=this.trail[t],e=(t+1)/this.trail.length,i=this.player.radius*e*.8;this.ctx.fillStyle=`rgba(255, 255, 255, ${e*.6})`,this.ctx.beginPath(),this.ctx.arc(s.x,s.y,i,0,Math.PI*2),this.ctx.fill()}}}window.addEventListener("load",()=>{new l});
//# sourceMappingURL=index-Cl-kXcxf.js.map
